{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/Loader/Loader.js","services/ApiService.js","components/App.js","index.js"],"names":["ImageGalleryItem","src","alt","bigSrc","onClick","className","ImageGallery","hits","id","map","hit","webformatURL","largeImageURL","tags","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","event","code","createPortal","currentTarget","target","initialState","query","page","Searchbar","onSubmit","useState","state","setState","reset","e","preventDefault","type","value","onChange","prev","autoComplete","autoFocus","placeholder","Button","fetchHits","LoaderSpinner","color","height","width","timeout","axios","defaults","baseURL","fetchPhotos","a","searchQuery","currentPage","searchURL","get","then","response","data","console","log","isLoading","App","options","catch","error","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","url","length","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.844d34bb.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ src, alt, bigSrc, onClick }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => onClick(bigSrc)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  bigSrc: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ hits, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\" id=\"gallery\">\r\n      {hits.map(hit => (\r\n        <ImageGalleryItem\r\n          key={hit.id}\r\n          src={hit.webformatURL}\r\n          bigSrc={hit.largeImageURL}\r\n          id={hit.id}\r\n          alt={hit.tags}\r\n          onClick={onClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  hits: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, largeImageURL }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n  const handleBackdrop = event => {\n    if (event.currentTarget !== event.target) return false;\n    onClose();\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdrop}>\n      <div className=\"Modal\">\n        <img src={largeImageURL} alt=\"img\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst initialState = {\n  query: '',\n  page: 1,\n};\n\nconst Searchbar = ({ onSubmit }) => {\n  const [state, setState] = useState(initialState);\n\n  const handleChange = e => {\n    setState(prev => ({ ...prev, query: e.target.value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(state.query);\n    reset();\n  };\n\n  const reset = () => {\n    setState(initialState);\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          value={state.query}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ fetchHits }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={fetchHits}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  fetchHits: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Loader from 'react-loader-spinner';\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Hearts\"\r\n      color=\"#00BFFF\"\r\n      height={60}\r\n      width={60}\r\n      timeout={3000} //3 secs\r\n      className=\"loader\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoaderSpinner;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\nconst ApiKEY = '22768784-54984d8802417c1fa5d19a8a9';\r\n\r\nconst fetchPhotos = async ({ searchQuery = '', currentPage = 1 }) => {\r\n  try {\r\n    const searchURL = `/?q=${searchQuery}&page=${currentPage}&key=${ApiKEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n    return await axios.get(searchURL).then(response => response.data.hits);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default fetchPhotos;\r\n","import React, { useState, useEffect } from 'react';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Modal from './Modal/Modal';\nimport Searchbar from './Searchbar/Searchbar';\nimport Button from './Button/Button';\nimport LoaderSpinner from './Loader/Loader';\nimport fetchPhotos from '../services/ApiService';\n\nconst initialState = {\n  hits: [],\n  currentPage: 1,\n  searchQuery: '',\n  largeImageURL: '',\n  isLoading: false,\n};\n\nconst App = () => {\n  const [state, setState] = useState(initialState);\n\n  const onChangeQuery = query => {\n    setState(prev => ({\n      ...prev,\n      searchQuery: query,\n      currentPage: 1,\n      hits: [],\n    }));\n  };\n\n  const fetchHits = () => {\n    const { currentPage, searchQuery } = state;\n\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    setState(prev => ({ ...prev, isLoading: true }));\n\n    fetchPhotos(options)\n      .then(hits => {\n        setState(prev => ({\n          ...prev,\n          hits: [...prev.hits, ...hits],\n          currentPage: prev.currentPage + 1,\n        }));\n      })\n      .catch(error => {\n        setState(prev => ({ ...prev, error }));\n      })\n      .finally(() => {\n        setState(prev => ({ ...prev, isLoading: false }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      });\n  };\n\n  useEffect(() => {\n    state.searchQuery && fetchHits(state.searchQuery);\n  }, [state.searchQuery]);\n\n  const toggleModal = url => {\n    setState(prev => ({ ...prev, largeImageURL: url }));\n  };\n\n  const { hits, isLoading, largeImageURL } = state;\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onChangeQuery} />\n      {largeImageURL && (\n        <Modal onClose={toggleModal} largeImageURL={largeImageURL} />\n      )}\n      <ImageGallery hits={state.hits} onClick={toggleModal} />\n      {hits.length > 0 && !isLoading && <Button fetchHits={fetchHits} />}\n      {isLoading && <LoaderSpinner />}\n    </div>\n  );\n};\n\nexport default App;\n\n// class App extends Component {\n//   state = {\n//     hits: [],\n//     currentPage: 1,\n//     searchQuery: '',\n//     largeImageURL: '',\n//     isLoading: false,\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.searchQuery !== this.state.searchQuery) {\n//       this.fetchHits();\n//     }\n//   }\n\n//   onChangeQuery = query => {\n//     this.setState({\n//       searchQuery: query,\n//       currentPage: 1,\n//       hits: [],\n//     });\n//   };\n\n//   fetchHits = () => {\n//     const { currentPage, searchQuery } = this.state;\n\n//     const options = {\n//       searchQuery,\n//       currentPage,\n//     };\n\n//     this.setState({ isLoading: true });\n\n//     fetchPhotos(options)\n//       .then(hits => {\n//         this.setState(prevState => ({\n//           hits: [...prevState.hits, ...hits],\n//           currentPage: prevState.currentPage + 1,\n//         }));\n//       })\n//       .catch(error => console.log(error))\n//       .finally(() => {\n//         this.setState({ isLoading: false });\n//         window.scrollTo({\n//           top: document.documentElement.scrollHeight,\n//           behavior: 'smooth',\n//         });\n//       });\n//   };\n\n//   toggleModal = url => {\n//     this.setState({ largeImageURL: url ? url : '' });\n//   };\n\n//   render() {\n//     const { hits, isLoading, largeImageURL } = this.state;\n//     return (\n//       <div className=\"App\">\n//         <Searchbar onSubmit={this.onChangeQuery} />\n//         {largeImageURL && (\n//           <Modal onClose={this.toggleModal} url={largeImageURL} />\n//         )}\n//         <ImageGallery hits={hits} onClick={this.toggleModal} />\n//         {hits.length > 0 && !isLoading && <Button fetchHits={this.fetchHits} />}\n//         {isLoading && <Loader />}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}